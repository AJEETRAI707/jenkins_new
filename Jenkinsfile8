pipeline {
	agent  any {
    		stages {
        	stage('delete_images&containers') {
            steps {
	    sh  docker images
	    sh  docker system prune
	    sh  docker rm $(docker ps -a -q)
	    sh  docker rm $(docker ps -q -f status=exited)
	    sh  docker rmi --unused      // remove all images that are not referenced by active containers
	    sh  docker rm $(docker ps -a | grep -v "mayadataio/maya-ui:latest" | cut -d ' ' -f1)  // remove all images except image name
	    sh  docker rm $(docker ps -a | grep -v "mayadataio/maya-io-server:latest" | cut -d ' ' -f1)  // remove all images except image name     	   sh  docker rm $(docker ps -a | grep -v "mayadataio/maya-io-agent:latest"  | cut -d ' ' -f1)  // remove all images except image name
            sh  docker rm $(docker ps -a | grep -v "mayadataio/cluster-register:latest" | cut -d ' ' -f1)  // remove all images except image na
            sh  docker rm $(docker ps -a | grep -v "mayadataio/status-agent:latest" | cut -d ' ' -f1)  // remove all images except image name
            sh  docker rm $(docker ps -a | grep -v "mayadataio/upgrade-agent:latest" | cut -d ' ' -f1)  // remove all images except image name
            



#some grep pattern
pattern=192.168
# save latest n images
n=1
# check first (?):
# docker inspect -f '{{ .Created }} {{ .Id }} {{ .RepoTags }}' $(docker images | tail -n+2 | sed 's/^\([^ ]*\) *\([^ ]*\) *\([^ ]*\).*/ \1:\2 \3 /' | grep $pattern | cut -d' ' -f3) | sort -r | tail -n+$((n+1))
docker rmi $(docker inspect -f '{{ .Created }} {{ .Id }}' $(docker images | tail -n+2 | sed 's/^\([^ ]*\) *\([^ ]*\) *\([^ ]*\).*/ \1:\2 \3 /' | grep $pattern | cut -d' ' -f3) | sort -r | tail -n+$((n+1)) | cut -d' ' -f2 | cut -c8-)




["mayadataio/maya-ui" "mayadataio/maya-io-server" "mayadataio/maya-io-agent" "mayadataio/cluster-register" "mayadataio/status-agent"
"mayadataio/upgrade-agent" ]







		}
	}
	}
}
 

